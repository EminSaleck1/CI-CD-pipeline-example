# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
         echo "Checking if environment variables are set..."
          if [ -z "$BUILD_CERTIFICATE_BASE64" ]; then echo "BUILD_CERTIFICATE_BASE64 is not set"; else echo "BUILD_CERTIFICATE_BASE64 is set"; fi
          if [ -z "$P12_PASSWORD" ]; then echo "P12_PASSWORD is not set"; else echo "P12_PASSWORD is set"; fi
          if [ -z "$BUILD_PROVISION_PROFILE_BASE64" ]; then echo "BUILD_PROVISION_PROFILE_BASE64 is not set"; else echo "BUILD_PROVISION_PROFILE_BASE64 is set"; fi
          if [ -z "$KEYCHAIN_PASSWORD" ]; then echo "KEYCHAIN_PASSWORD is not set"; else echo "KEYCHAIN_PASSWORD is set"; fi
          
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.3.0'

      - name: List directory contents
        run: ls -R

      - name: Build and export IPA
        env:
          EXPORT_PLIST: ${{ secrets.EXPORT_OPTIONS_LIST }}
        run: |
          EXPORT_PLIST_PATH=$RUNNER_TEMP/exportOptions.plist
          echo -n "$EXPORT_PLIST" | base64 --decode --output $EXPORT_PLIST_PATH
          xcodebuild clean archive -project BeforeAfter-proof-of-concept/BeforeAfter-proof-of-concept.xcodeproj -scheme "BeforeAfter-proof-of-concept" -archivePath $RUNNER_TEMP/BeforeAfter-proof-of-concept.xcarchive -destination 'generic/platform=iOS' CODE_SIGN_STYLE=Manual PROVISIONING_PROFILE_SPECIFIER="Geniart - Ad Hoc"
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/BeforeAfter-proof-of-concept.xcarchive -exportOptionsPlist $EXPORT_PLIST_PATH -exportPath $RUNNER_TEMP/export  
      
  upload_to_appcenter:
    needs: build_ios
    runs-on: ubuntu-latest
    steps:

    - name: App Center Distribute
      uses: devussy/AppCenter-Distribute-Github-Action@v3.0.0
      with:
          appName: EminSaleck1/CI-CD-pipeline-example
          token: ${{ secrets.APPCENTER_API_TOKEN }}
          group: Internal
          file: BeforeAfter-proof-of-concept.ipa
          notifyTesters: true
          debug: true
